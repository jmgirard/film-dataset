0:View(hdf_nested[[3]][[2]])
0:View(hdf_nested[[4]][[2]])
0:View(hdf_nested[[3]][[3]])
0:View(hdf_nested[[4]][[3]])
0:View(hdf_nested[[3]][[3]])
0:View(hdf_nested[[4]][[3]])
0:View(hdf_nested[[3]][[4]])
0:View(hdf_nested[[4]][[4]])
0:View(hdf_nested[[3]][[5]])
0:View(hdf_nested[[4]][[5]])
0:View(hdf_nested[[3]][[6]])
0:View(hdf_nested[[4]][[6]])
0:View(hdf_nested[[3]][[7]])
0:View(hdf_nested[[4]][[7]])
0:View(hdf_nested[[3]][[8]])
0:View(hdf_nested[[4]][[8]])
0:View(hdf_nested[[3]][[9]])
0:View(hdf_nested[[4]][[9]])
0:View(hdf_nested[[3]][[10]])
0:View(hdf_nested[[4]][[10]])
0:View(hdf_nested[[3]][[11]])
0:View(hdf_nested[[4]][[11]])
0:View(hdf_nested[[3]][[12]])
0:View(hdf_nested[[4]][[12]])
0:View(hdf_nested[[3]][[13]])
0:View(hdf_nested[[3]][[14]])
0:View(hdf_nested[[3]][[15]])
0:View(hdf_nested[[3]][[16]])
0:View(hdf_nested[[3]][[17]])
0:View(hdf_nested[[3]][[18]])
0:View(hdf_nested[[3]][[19]])
0:View(hdf_nested[[3]][[20]])
0:View(hdf_nested[[3]][[21]])
0:View(hdf_nested[[3]][[22]])
0:View(hdf_nested[[4]][[22]])
0:View(hdf_nested[[4]][[21]])
0:View(hdf_nested[[4]][[20]])
0:View(hdf_nested[[4]][[19]])
0:View(hdf_nested[[4]][[18]])
0:View(hdf_nested[[4]][[17]])
0:pos_model <- 'pos =~ Alert + Determined + Enthusiastic + Excited + Inspired'
0:neg_model <- 'neg =~ Afraid + Distressed + Nervous + Scared + Upset'
0:safe_cfa <- safely(cfa)
0:hdf_nested <-
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(Rater = as.character(Rater)) |>
0:nest(data = -Abbrev) |>
0:mutate(
0:pos_cfa = map(
0:data,
0:\(x) safe_cfa(
0:pos_model,
0:data = drop_na(x),
0:std.lv = TRUE,
0:ordered = TRUE,
0:estimator = "WLSMV"
0:)
0:),
0:neg_cfa = map(
0:data,
0:\(x) safe_cfa(
0:neg_model,
0:data = drop_na(x),
0:std.lv = TRUE,
0:ordered = TRUE,
0:estimator = "WLSMV"
0:)
0:),
0:pos_rel = map(pos_cfa, \(x) reliability(x$result)),
0:neg_rel = map(neg_cfa, \(x) reliability(x$result))
0:) |>
0:print()
0:#| message: false
0:#| warning: false
0:pos_model <- 'pos =~ Alert + Determined + Enthusiastic + Excited + Inspired'
0:neg_model <- 'neg =~ Afraid + Distressed + Nervous + Scared + Upset'
0:safe_cfa <- safely(cfa)
0:hdf_nested <-
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(Rater = as.character(Rater)) |>
0:nest(data = -Abbrev) |>
0:mutate(
0:pos_cfa = map(
0:data,
0:\(x) safe_cfa(
0:pos_model,
0:data = drop_na(x),
0:std.lv = TRUE,
0:ordered = TRUE,
0:estimator = "WLSMV"
0:)
0:),
0:neg_cfa = map(
0:data,
0:\(x) safe_cfa(
0:neg_model,
0:data = drop_na(x),
0:std.lv = TRUE,
0:ordered = TRUE,
0:estimator = "WLSMV"
0:)
0:),
0:pos_rel = map(pos_cfa, \(x) reliability(x$result)),
0:neg_rel = map(neg_cfa, \(x) reliability(x$result)),
0:pos_omega = map_dbl(pos_rel, "omega"),
0:neg_omega = map_dbl(neg_rel, "omega")
0:) |>
0:print()
0:hdf_nested <-
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(Rater = as.character(Rater)) |>
0:nest(data = -Abbrev) |>
0:mutate(
0:pos_cfa = map(
0:data,
0:\(x) safe_cfa(
0:pos_model,
0:data = drop_na(x),
0:std.lv = TRUE,
0:ordered = TRUE,
0:estimator = "WLSMV"
0:)
0:),
0:neg_cfa = map(
0:data,
0:\(x) safe_cfa(
0:neg_model,
0:data = drop_na(x),
0:std.lv = TRUE,
0:ordered = TRUE,
0:estimator = "WLSMV"
0:)
0:),
0:pos_rel = map(pos_cfa, \(x) reliability(x$result)),
0:neg_rel = map(neg_cfa, \(x) reliability(x$result)))
0:hdf_nested$pos_rel[[1]]
0:hdf_nested$pos_rel[[1]]$pos[[3]]
0:hdf_nested$pos_rel[[1]][[3]]
0:hdf_nested <-
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(Rater = as.character(Rater)) |>
0:nest(data = -Abbrev) |>
0:mutate(
0:pos_cfa = map(
0:data,
0:\(x) safe_cfa(
0:pos_model,
0:data = drop_na(x),
0:std.lv = TRUE,
0:ordered = TRUE,
0:estimator = "WLSMV"
0:)
0:),
0:neg_cfa = map(
0:data,
0:\(x) safe_cfa(
0:neg_model,
0:data = drop_na(x),
0:std.lv = TRUE,
0:ordered = TRUE,
0:estimator = "WLSMV"
0:)
0:),
0:pos_rel = map(pos_cfa, \(x) reliability(x$result)),
0:neg_rel = map(neg_cfa, \(x) reliability(x$result)),
0:pos_omega = map_dbl(pos_rel, \(x) x[[3]]),
0:neg_omega = map_dbl(neg_rel, \(x) x[[3]])
0:) |>
0:print()
0:hdf_nested |>
0:summary(
0:across(pos_omega:neg_omega, .fns = list(m = mean, s = sd, min = min, max = max))
0:)
0:hdf_nested |>
0:summarize(
0:across(pos_omega:neg_omega, .fns = list(m = mean, s = sd, min = min, max = max))
0:)
0:hdf_nested |>
0:summarize(
0:across(pos_omega:neg_omega, .fns = list(m = mean, s = sd, min = min, max = max))
0:) |>
0:kable(digits = 2)
0:library(knitr)
0:hdf_nested |>
0:summarize(
0:across(pos_omega:neg_omega, .fns = list(m = mean, s = sd, min = min, max = max))
0:) |>
0:kable(digits = 2)
0:library(kableExtra)
0:hdf_nested |>
0:summarize(
0:across(
0:pos_omega:neg_omega,
0:.fns = list(m = mean, s = sd, min = min, max = max))
0:) |>
0:kable(digits = 2) |>
0:kable_styleing()
0:hdf_nested |>
0:summarize(
0:across(
0:pos_omega:neg_omega,
0:.fns = list(m = mean, s = sd, min = min, max = max))
0:) |>
0:kable(digits = 2) |>
0:kable_styling()
0:hdf_nested |> select(Abbrev, ends_with("_omega"))
0:hdf_nested |> select(Abbrev, ends_with("_omega")) |>
0:kable(digits = 2) |>
0:kable_styling()
0:hdf_nested |>
0:select(Abbrev, ends_with("_omega")) |>
0:arrange(Abbrev) |>
0:kable(digits = 2) |>
0:kable_styling()
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:print()
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(
0:PA = rowMeans(across(c(Alert, Determined, Enthusiastic, Excited, Inspired), na.rm = TRUE))
0:) |>
0:print()
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(
0:PA = rowMeans(c_across(c(Alert, Determined, Enthusiastic, Excited, Inspired), na.rm = TRUE))
0:) |>
0:print()
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(
0:PA = rowMeans(across(c(Alert, Determined, Enthusiastic, Excited, Inspired), na.rm = TRUE))
0:) |>
0:print()
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(
0:PA = rowMeans(c(Alert, Determined, Enthusiastic, Excited, Inspired), na.rm = TRUE))
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(
0:PA = rowMeans(across(c(Alert, Determined, Enthusiastic, Excited, Inspired)), na.rm = TRUE)
0:) |>
0:print()
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(
0:PA = rowMeans(
0:across(c(Alert, Determined, Enthusiastic, Excited, Inspired)),
0:na.rm = TRUE
0:),
0:NA = rowMeans(
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(
0:Pos = rowMeans(
0:across(c(Alert, Determined, Enthusiastic, Excited, Inspired)),
0:na.rm = TRUE
0:),
0:Neg = rowMeans(
0:across(c(Afraid, Distressed, Nervous, Scared, Upset)),
0:na.rm = TRUE
0:)
0:) |>
0:print()
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(
0:Pos = rowMeans(
0:across(c(Alert, Determined, Enthusiastic, Excited, Inspired)),
0:na.rm = TRUE
0:),
0:Neg = rowMeans(
0:across(c(Afraid, Distressed, Nervous, Scared, Upset)),
0:na.rm = TRUE
0:)
0:) |>
0:group_by(Abbrev) |>
0:summarize(
0:Pos = mean(Pos),
0:Neg = mean(Neg)
0:) |>
0:print()
0:holistic_df |>
0:pivot_wider(
0:names_from = "Scale",
0:values_from = "Rating"
0:) |>
0:mutate(
0:Pos = rowMeans(
0:across(c(Alert, Determined, Enthusiastic, Excited, Inspired)),
0:na.rm = TRUE
0:),
0:Neg = rowMeans(
0:across(c(Afraid, Distressed, Nervous, Scared, Upset)),
0:na.rm = TRUE
0:)
0:) |>
0:group_by(Abbrev) |>
0:summarize(
0:Pos = mean(Pos),
0:Neg = mean(Neg)
0:) |>
0:arrange(Abbrev) |>
0:kable(digits = 2) |>
0:kable_styling()
0:seq(-4, 4, length.out = 9)
0:ggplot(valence_df, aes(x = Rating, fill = stat(x))) +
0:geom_histogram(
0:breaks = seq(-4.25, 4.25, 1),
0:color = "black",
0:linewidth = 1/3
0:) +
0:labs(
0:x = "Valence Rating",
0:y = "Count of Bins"
0:) +
0:scale_y_continuous(expand = c(0, 0)) +
0:scale_x_continuous(breaks = c(-4, -2, 0, 2, 4)) +
0:scale_fill_gradient2(low = "#3182bd", mid = "white", high = "#e6550d") +
0:coord_cartesian(ylim = c(0, 70000)) +
0:theme_bw(base_size = 8) +
0:theme(
0:legend.position = "none",
0:panel.grid.major.x = element_blank(),
0:panel.grid.minor.x = element_blank(),
0:plot.margin = margin(4,0,0,0)
0:)
0:ggsave("vhist.pdf", width = 3.5, height = 1.75, units = "in")
0:ggplot(valence_df, aes(x = Rating, fill = stat(x))) +
0:geom_histogram(
0:breaks = seq(-4.5, 4.5, 1),
0:color = "black",
0:linewidth = 1/3
0:) +
0:labs(
0:x = "Valence Rating",
0:y = "Count of Bins"
0:) +
0:scale_y_continuous(expand = c(0, 0)) +
0:scale_x_continuous(breaks = c(-4, -2, 0, 2, 4)) +
0:scale_fill_gradient2(low = "#3182bd", mid = "white", high = "#e6550d") +
0:coord_cartesian(ylim = c(0, 70000)) +
0:theme_bw(base_size = 8) +
0:theme(
0:legend.position = "none",
0:panel.grid.major.x = element_blank(),
0:panel.grid.minor.x = element_blank(),
0:plot.margin = margin(4,0,0,0)
0:)
0:ggsave("vhist.pdf", width = 3.5, height = 1.75, units = "in")
0:ggplot(valence_df, aes(x = Rating, fill = stat(x))) +
0:geom_histogram(
0:breaks = seq(-4.5, 4.5, 1),
0:color = "black",
0:linewidth = 1/3
0:) +
0:labs(
0:x = "Valence Rating",
0:y = "Count of Bins"
0:) +
0:scale_y_continuous(expand = c(0, 0)) +
0:scale_x_continuous(breaks = c(-4, -2, 0, 2, 4)) +
0:scale_fill_gradient2(low = "#3182bd", mid = "white", high = "#e6550d") +
0:coord_cartesian(ylim = c(0, 100000)) +
0:theme_bw(base_size = 8) +
0:theme(
0:legend.position = "none",
0:panel.grid.major.x = element_blank(),
0:panel.grid.minor.x = element_blank(),
0:plot.margin = margin(4,0,0,0)
0:)
0:ggplot(valence_df, aes(x = Rating, fill = stat(x))) +
0:geom_histogram(
0:breaks = seq(-4.5, 4.5, 1),
0:color = "black",
0:linewidth = 1/3
0:) +
0:labs(
0:x = "Valence Rating",
0:y = "Count of Bins"
0:) +
0:scale_y_continuous(expand = c(0, 0)) +
0:scale_x_continuous(breaks = c(-4, -2, 0, 2, 4)) +
0:scale_fill_gradient2(low = "#3182bd", mid = "white", high = "#e6550d") +
0:coord_cartesian(ylim = c(0, 90000)) +
0:theme_bw(base_size = 8) +
0:theme(
0:legend.position = "none",
0:panel.grid.major.x = element_blank(),
0:panel.grid.minor.x = element_blank(),
0:plot.margin = margin(4,0,0,0)
0:)
0:ggplot(valence_df, aes(x = Rating, fill = stat(x))) +
0:geom_histogram(
0:breaks = seq(-4.5, 4.5, 1),
0:color = "black",
0:linewidth = 1/3
0:) +
0:labs(
0:x = "Valence Rating",
0:y = "Count of Bins"
0:) +
0:scale_y_continuous(expand = c(0, 0)) +
0:scale_x_continuous(breaks = c(-4, -2, 0, 2, 4)) +
0:scale_fill_gradient2(low = "#3182bd", mid = "white", high = "#e6550d") +
0:coord_cartesian(ylim = c(0, 95000)) +
0:theme_bw(base_size = 8) +
0:theme(
0:legend.position = "none",
0:panel.grid.major.x = element_blank(),
0:panel.grid.minor.x = element_blank(),
0:plot.margin = margin(4,0,0,0)
0:)
0:ggplot(valence_df, aes(x = Rating, fill = stat(x))) +
0:geom_histogram(
0:breaks = seq(-4.5, 4.5, 1),
0:color = "black",
0:linewidth = 1/3
0:) +
0:labs(
0:x = "Valence Rating",
0:y = "Count of Bins"
0:) +
0:scale_y_continuous(expand = c(0, 0)) +
0:scale_x_continuous(breaks = c(-4, -2, 0, 2, 4)) +
0:scale_fill_gradient2(low = "#3182bd", mid = "white", high = "#e6550d") +
0:coord_cartesian(ylim = c(0, 95000)) +
0:theme_bw(base_size = 8) +
0:theme(
0:legend.position = "none",
0:panel.grid.major.x = element_blank(),
0:panel.grid.minor.x = element_blank(),
0:plot.margin = margin(4,0,0,0)
0:)
0:ggsave("vhist.pdf", width = 3.5, height = 1.75, units = "in")
0:ggplot(valence_df, aes(x = Rating, fill = stat(x))) +
0:geom_histogram(
0:breaks = c(-4.0, -3.5, -2.5, -1.5, -0.5, 0.5, 1.5, 2.5, 3.5, 4.0),
0:color = "black",
0:linewidth = 1/3
0:) +
0:labs(
0:x = "Valence Rating",
0:y = "Count of Bins"
0:) +
0:scale_y_continuous(expand = c(0, 0)) +
0:scale_x_continuous(breaks = c(-4, -2, 0, 2, 4)) +
0:scale_fill_gradient2(low = "#3182bd", mid = "white", high = "#e6550d") +
0:coord_cartesian(ylim = c(0, 95000)) +
0:theme_bw(base_size = 8) +
0:theme(
0:legend.position = "none",
0:panel.grid.major.x = element_blank(),
0:panel.grid.minor.x = element_blank(),
0:plot.margin = margin(4,0,0,0)
0:)
0:ggsave("vhist.pdf", width = 3.5, height = 1.75, units = "in")
0:#| echo: false
0:source("./R/functions.R")
0:info_df <- get_info_df()
0:valence_df <- get_valence_df()
0:holistic_df <- get_holistic_df()
0:mean(info_df$Duration
0:)
0:sd(info_df$Duration)
0:seq(-4, 4, by = .67)
0:valence_df |> filter(Abbrev == "SilenceLambs")
