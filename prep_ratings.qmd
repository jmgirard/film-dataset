---
title: "Prepare Ratings"
---

```{r}
#| message: false

library(tidyverse)
library(readxl)
```

## Prepare continuous (CARMA) ratings

```{r}
#| echo: true

# Find all rating files
carma_files <- 
  dir(
    path = "./data/Carma_Rating_Results", 
    pattern = "*.xlsx", 
    full.names = TRUE
  )
```

```{r}
#| echo: true

# Read in all rating files
carma_raw <- 
  map_dfr(
    .x = carma_files, 
    .f = read_xlsx, 
    skip = 7, 
    .name_repair = ~str_remove_all(., "[:space:]"), 
    .id = "Video"
  ) |> 
  select(
    Video, 
    Second, 
    starts_with("MW")
  ) |> 
  mutate(
    Video = parse_integer(Video),
    Second = as.integer(Second),
    Abbrev = factor(
      Video, 
      levels = seq_along(carma_files), 
      labels = str_extract(
        string = basename(carma_files), 
        pattern = "[^_]+"
      )
    ),
    .before = 1
  )
```

```{r}
#| echo: true

# Reshape and sort data
carma_tidy <- 
  carma_raw |> 
  pivot_longer(
    cols = starts_with("MW"), 
    names_to = "Rater", 
    values_to = "Rating",
    names_transform = parse_number
  ) |> 
  mutate(Rater = as.integer(Rater)) |> 
  arrange(Video, Rater, Second) |> 
  select(Abbrev, Rater, Second, Rating) |> 
  print()
```

```{r}
#| echo: true

# Write data as a compressed RDS file
write_rds(carma_tidy, file = "./data/valence_ratings.rds", compress = "gz")
```

## Prepare holistic ratings

```{r}
#| echo: true

redcap_raw <- 
  read_xlsx("./data/holistic_ratings_raw.xlsx") |>
  separate(
    participant_id, 
    into = c("Rater", "Session"), 
    sep = "[_\\s]", 
    extra = "merge"
  ) |> 
  select(-starts_with("clip")) |> 
  pivot_longer(
    -c(Rater, Session), 
    names_to = "var", 
    values_to = "Rating"
  ) |> 
  separate(
    var, 
    into = c("Abbrev", "Scale"), 
    sep = "_", 
    extra = "merge"
  ) |> 
  filter(
    Scale %in% c(
      "inspired", "alert", "excited", "enthusiastic", "determined", 
      "afraid", "upset", "nervous", "scared", "distressed"
    )
  ) |> 
  group_by(Rater, Abbrev, Scale) |> 
  summarize(
    Rating = do.call("coalesce", as.list(Rating)),
    .groups = "drop"
  ) |> 
  mutate(
    Rater = as.integer(parse_number(Rater)),
    Scale = str_to_title(Scale),
    Abbrev = factor(Abbrev, levels = c("aatb", "bs", "cmiyc", "dos", "f", "fg", "gm", "gwh", "ks", "lb", "lb2", "lms", "m", "mi", "ms", "ncom", "pf", "poh", "pt", "sn", "sotl", "z"),
                  labels = c("AkeelahBee", "BealeStreet", "CatchMe", "DaysSummer", "Fences", "ForrestGump", "GreenMile", "GoodWill", "KingsSpeech", "LadyBird", "LegallyBlonde", "LittleMiss", "Moonlight", "Miracle", "MarriageStory", "NoCountry", "PulpFiction", "PursuitHappyness", "ParentTrap", "SocialNetwork", "Silence", "Zodiac")),
    Rating = Rating - 1
  ) |> 
  select(Abbrev, Rater, Scale, Rating) |> 
  print()
```

```{r}
#| echo: true

# Write data as a compressed RDS file
write_rds(redcap_raw, file = "./data/holistic_ratings.rds", compress = "gz")
```